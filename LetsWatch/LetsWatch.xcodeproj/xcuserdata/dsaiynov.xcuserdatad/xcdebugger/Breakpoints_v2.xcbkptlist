<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "C4B325B9-408F-490A-9829-1B1BB682A14A"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "852143AF-88FB-4B03-AF28-A5C965145781"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "LetsWatch/Views/Filtering/View/FilterView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "8"
            endingLineNumber = "8"
            landmarkName = "unknown"
            landmarkType = "0">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "2C856C82-4CD4-4329-B2C0-CF9AC3A39EC2"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "LetsWatch/Views/Swiping/View/CardStackView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "42"
            endingLineNumber = "42"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "2C856C82-4CD4-4329-B2C0-CF9AC3A39EC2 - 1d39ec49155eaf90"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; SwiftUI.Text in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Text, SwiftUI.NavigationLink&lt;SwiftUI.Text, &lt;&lt;opaque return type of SwiftUI.View.navigationBarBackButtonHidden(Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(SwiftUI.Text, SwiftUI.NavigationLink&lt;SwiftUI.Text, &lt;&lt;opaque return type of SwiftUI.View.navigationBarBackButtonHidden(Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt;&gt;, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(SwiftUI.ZStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;LetsWatch.Card&gt;, Swift.Int, LetsWatch.CardView&gt;&gt;, LetsWatch.SwipeActionButtonsView)&gt;&gt;&gt; in LetsWatch.CardStackView.body.getter : some"
                  moduleName = "LetsWatch"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/dsaiynov/Desktop/LetsWatch/LetsWatch/Views/Swiping/View/CardStackView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "22"
                  endingLineNumber = "22"
                  offsetFromSymbolStart = "64">
               </Location>
               <Location
                  uuid = "2C856C82-4CD4-4329-B2C0-CF9AC3A39EC2 - 30fc14abdfd79a8c"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; SwiftUI.Text in closure #1 () -&gt; SwiftUI.TupleView&lt;(SwiftUI.Text, SwiftUI.NavigationLink&lt;SwiftUI.Text, &lt;&lt;opaque return type of SwiftUI.View.navigationBarBackButtonHidden(Swift.Bool) -&gt; some&gt;&gt;.0&gt;)&gt; in LetsWatch.CardStackView.body.getter : some"
                  moduleName = "LetsWatch"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/dsaiynov/Desktop/LetsWatch/LetsWatch/Views/Swiping/View/CardStackView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "21"
                  endingLineNumber = "21"
                  offsetFromSymbolStart = "64">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
